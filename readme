# Projeto ETL de Rendimento AgrÃ­cola ğŸŒ¾ğŸ“Š

Este projeto implementa um **pipeline ETL** que processa dados de rendimento de safras agrÃ­colas, com possibilidade de integraÃ§Ã£o de dados climÃ¡ticos, e carrega os resultados em um **banco de dados PostgreSQL**. O objetivo Ã© permitir anÃ¡lises histÃ³ricas e correlaÃ§Ã£o entre rendimento e variÃ¡veis ambientais.

---

## ğŸ”¹ Tecnologias utilizadas

- **Python 3** â€“ pipeline e anÃ¡lises
- **Pandas / NumPy** â€“ manipulaÃ§Ã£o de dados
- **PostgreSQL** â€“ banco relacional
- **SQLAlchemy / psycopg2** â€“ conexÃ£o Python â†” PostgreSQL
- **Docker / Docker Compose** â€“ containerizaÃ§Ã£o do banco e serviÃ§os
- **Jupyter Notebook** â€“ anÃ¡lise exploratÃ³ria e grÃ¡ficos
- **Matplotlib / Plotly** â€“ visualizaÃ§Ã£o de dados
- **Prefect / Airflow (opcional)** â€“ orquestraÃ§Ã£o de pipelines

---

## ğŸ”¹ Estrutura do projeto

agriculture_yield_project/
â”‚â”€â”€ etl/
â”‚ â””â”€â”€ etl_pipeline.py
â”‚â”€â”€ notebooks/
â”‚ â””â”€â”€ analysis.ipynb
â”‚â”€â”€ docker-compose.yml
â”‚â”€â”€ schema.sql
â”‚â”€â”€ requirements.txt
â”‚â”€â”€ .env.example
â”‚â”€â”€ data/
â”‚ â”œâ”€â”€ raw/
â”‚ â””â”€â”€ processed/
â”‚â”€â”€ README.md

yaml
Copiar cÃ³digo

---

## ğŸ”¹ Como rodar o projeto

1. **Clone o repositÃ³rio**
```bash
git clone https://github.com/seu-usuario/agriculture_yield_project.git
cd agriculture_yield_project
Crie e configure o ambiente

bash
Copiar cÃ³digo
cp .env.example .env
# edite se desejar usuÃ¡rio, senha ou porta do PostgreSQL
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
Subir os containers do Docker

bash
Copiar cÃ³digo
docker-compose up -d
docker-compose ps   # verificar se postgres e pgadmin subiram
Executar ETL

bash
Copiar cÃ³digo
python etl/etl_pipeline.py
Analisar dados

bash
Copiar cÃ³digo
jupyter notebook
# abra notebooks/analysis.ipynb
(Opcional) Acessar pgAdmin

Acesse http://localhost:8080

Login: admin@admin.com

Senha: admin

Conecte ao PostgreSQL (host=localhost, port=5432, user/pass do .env)